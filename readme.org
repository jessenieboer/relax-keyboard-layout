#+html:<h1 align="center">The Relax Keyboard Layout</h1>

* What
A keyboard layout for the [[https://kinesis-ergo.com/keyboards/advantage2-keyboard/][Kinesis Advantage2]] keyboard that's designed to minimize muscle usage.

#+html:<img align="center" src="images/relax.jpg" alt="Relax keyboard layout" title="Relax keyboard layout">

** Features
- The most commonly used letters and punctuation (biased towards programming) are assigned to the easiest-to-reach keys
- Thanks to the Kinesis Advantage2, four different 'layers' allow us to reuse those easiest keys four times
- With a [[https://kinesis-ergo.com/shop/advantage-single-pedal/][foot pedal]], no thumb usage is necessary, allowing us to type from a relaxed hand position
- Common bigrams are arranged either for opposite hands for an easy one-hand typing
- F keys are more accessible than on a normal keyboard
- The Kinesis Advantage2 makes it easy to customize the layout

Note that I have no affiliation with Kinesis; if it sounds like I'm advertising their keyboard, I'm just giving credit where credit is due.

* Why
I have a [[https://ryr1.org/][genetic muscle disease]] that causes my muscles to become exhausted very easily. I cannot sustain the exertion required for normal computer use, and if I try to push my hands and arms beyond their limits, it gets painful. Since developing and adapting to this keyboard layout, however, I've been able to be more productive without wearing out my muscles to an unhealthy degree.

* For Whom
Myself and anyone else who finds that using the normal QWERTY layout is too strenuous or painful. I think this layout could especially help people with Repetitive Strain Injury from computer use and, while I'm no doctor, I suspect it might help prevent it.

* By Whom
Me, acknowledging:
- Kinesis, for their excellent keyboard: https://kinesis-ergo.com/keyboards/advantage2-keyboard/
- The workman layout, from which I drew some inspiration: https://workmanlayout.org/
- I believe I used this excellent site for data on the most commonly used letters, bigrams, and trigrams in English, but it seems to have disappeared: http://mtgap.bilfo.com/theory-of-letter-frequency.html
- Xah Lee, for this report on punctuation frequency in computer languages: http://xahlee.info/comp/computer_language_char_distribution.html
- This online tool I used to generate the image of the layout: http://www.keyboard-layout-editor.com/,

* How
** Installation
Requirements:
- A Kinesis Advantage 2 keyboard and some basic familiarity with how it works (see the [[https://kinesis-ergo.com/wp-content/uploads/Adv2-Users-Manual-US_6-22-21.pdf][manual]])

1. Activate Power User Mode (progm + shift + esc)
   - The led lights on the keyboard will flash four times when Power User Mode is activated, twice when it's deactivated
   - To find out if the keyboard is in Power User Mode, open a text editor and hit progm + esc to print out a status report. If you're in Power User Mode, it will contain the line "Power user mode> on"
2. Open the v-Drive (progm + F1)
3. Navigate to the v-Drive and go into the "active" directory
4. Replace either qwerty.txt or dvorak.txt from this repo, depending on which layout you want to replace 
5. Close v-Drive (progm + F1)
6. Activate either qwerty (progm + F3) or dvorak mode (progm + F4) depending on which layout you replaced in step 4

** Use
There are 4 layers to this layout.

The main layer contains letters, control keys and F keys. This is what a key does when pressed by itself, without holding any modifying keys.

The capital layer is simply the capitalized main-layer letters; hold L-shift to type capitals. 

The punctuation layer contains its namesake; hold R-shift to type punctuation. This is what I use the foot pedal for.

The number/control layer contains numbers and number-adjacent punctuation on the left hand, and control commands (arrow keys, pgup and pgdn, etc...) on the right hand. Hold down kp-shift to access this layer.

#+html:<img align="center" src="images/layers.jpg" alt="layers" title="layers">

*** Personal ergonomics
Though my setup is tailored to my particular physical needs, perhaps it will be of use to others. I find it to be quite comfortable and sustainable.

I hold the keyboard on my lap using an old laptop holder, propping the bottom of the keyboard up with some [[https://www.amazon.com/Padded-Memory-Support-Office-Computer/dp/B07F7Y1LRL/][wrist rests]] so that it sits perpendicular to my lap rather than at downward angle.

#+html:<img src="images/lap.jpg" alt="keyboard on lap" title="keyboard on lap">

Then I place more wrist rests on top of the keybord, on which I, go figure, rest my wrists. This way, my relaxed hands can dangle over the keywells, with a lot of my arm weight borne by the wrist rests. 

#+html:<img src="images/wrist-wrests-1.jpg" alt="wrist wrests" title="wrist wrests">
#+html:<img src="images/wrist-wrests-2.jpg" alt="wrist wrests" title="wrist wrests">

I can also rest my elbows on my chair's armrests if I want to support my arms that way, but having my elbows tucked close to my body is a bit more comfortable.

*** Customization
While you can customize everything in the layout, the F keys, bksp, tab, and modifier keys are the most flexible; you can swap those around easily while still keeping the core letter/punctuation arrangement intact. The F1/F7 positions are especially useful; if you don't use F keys often, consider moving one of your frequently used modifier keys there, or the R-shifts if you have no foot pedal. And if you do want to make use of your thumbs, the F2/F8 positions can easier for them to reach.

You can refer to the Kinesis Advantage2 [[https://kinesis-ergo.com/wp-content/uploads/Adv2-Users-Manual-US_6-22-21.pdf][manual]] for detailed information on configuring the keyboard using text files, but here is a quick overview.

#+begin_html
Generally, the format to remap a key is
<code>[location token]>[action token]</code>
meaning
<code>[the physical key you press]>[what it should do when you press it]</code>
See pages 37-38 in the manual for a map of location tokens and a list of action tokens.

For these examples, we will be editing dvorak.txt, so use this image from the manual as a reference:
<img src="images/dvorak.jpg" alt="dvorak" title="dvorak">

Switch the main layer for dvorak 'k' to 'L-ctrl' (instead of 'F1' as in Relax layout):
<code>[k]>[lctrl]</code>

Switch the main layer for dvorak 'k' to '(' (instead of 'F1'):
<code>[k]>{-rshift}{9}{+rshift}</code>
This is an example of how do to punctuation that originally required a shift key.

Switch the number/control layer for dvorak 'g' to 'page up' (instead of 'home') 
number/control layer:
<code>[kp7]>[pup]</code>
Note that I implement the conceptual layer that I call the "number/control layer" by making use of what Kinesis calls the "keypad layer" or "embedded layer" of the physical keyboard. The keypad layer has its own set of location tokens.

Switch punctuation layer for dvorak 'a' to '+' (instead of '/'):
<code>{rshift}{a}>{/}</code>
The punctuation layer is accessed through R-shift.

#+end_html

** License
  
** Development
*** How I made it
There is nothing super formal or scientific behind this design; it's mostly the result of experimentation and looking stuff up on the internet. I started by figuring out which physical keys took the least muscular effort for me to hit. That is reflected in the colors in the top image: the greenest keys are easiest from a neutral hand position and go from yellow to orange the harder they become.

Then I mapped the letters and punctuation, trying to put the most frequently used characters in the easiest-to-reach places, also taking into account how common combinations would be typed. This took plenty of experimentation, as did determining the most comfortable places for modifier keys. 

During this time I developed a domain-specific language using [[https://www.jetbrains.com/mps/][Jetbrains MPS]] in order to get my head around the problem and to generate layouts in the correct format. This let me iterate quickly on the key placement, but I think the languge itself is clunky and overengineered and not much use to anyone it its current form.

*** Major decisions and the reasons behind them
- Thumbs are not intended to be used at all, because hitting a key with my thumb disrupts my hand's relaxation too much. The R-shift on the thumb keys are just there in case you don't have a foot pedal.
- Rather than always alternating hands, some common bigrams are typed with the same hand. This is because there are several same-hand combinations that are quite easy, (such as 'he' and 'es') and I wanted to put them to use.
- I use the middle finger for shifting to the number/control layer (kp-shift) because I found it easy to strech that finger out, stab downward, and hold it there with the weight of my hand. There will be times I need to hold that position with one hand and make many keystrokes with the other, and the middle finger seemed the strongest candidate for sustaining that position.
- I use the ring finger for capitals (L-shift); stretching out that finger out is easy enough, and I don't type captials so frequently as to warrant a premium position for L-shift. Also, I will ususally only captializer one-at-a-time, so I don't need a stronger finger to lean on for an extended period.
- The alt, ctrl, and win keys are in hard-to-reach areas because I don't use them if I can help it; I primarily use Emacs with some customizations that enable modal editing. This is also why a couple F keys are in premium spots: I use them to switch between typing literal characters and issuing commands in Emacs.
- 

*** To do
- I have not worked much with the number/control layer; I think there are improvements to be made there
 
** Contributing
